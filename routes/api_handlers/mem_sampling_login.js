/*jshint node:true*/
/*globals ROOT_PATH,SERVER_EVENT*/
var EventEmitter = require('events').EventEmitter;
var childProcess = require('child_process');
var handler = new EventEmitter();

function pushMessage(connections, message) {
	var messageStr = JSON.stringify(message);
	if (!connections) {
		console.log('cant\'t push message, invalid connection');
		return;
	}
	if (connections.forEach) {
		connections.forEach(function enun_connections(conn) {
			// conn might be undefined if disconnected
			if (conn) {
				conn.sendUTF(messageStr);
			}
		});
	} else if (connections.sendUTF) {
		connections.sendUTF(messageStr);
	}
}

handler.tick = function () {
	if (true) {
		var samplingData=[
    "connected",
    "38920",
    "39196",
    "38932",
    "38932",
    "op_start",
    "op_step1,2,1,10",
    "37252",
    "36072",
    "36076",
    "36076",
    "35456",
    "35456",
    "35028",
    "35024",
    "35024",
    "35024",
    "35024",
    "35024",
    "35024",
    "35024",
    "34984",
    "34984",
    "34608",
    "34096",
    "34096",
    "34096",
    "34096",
    "34096",
    "34096",
    "34096",
    "34096",
    "34096",
    "34096",
    "34096",
    "34096",
    "34096",
    "34096",
    "34096",
    "34096",
    "34096",
    "34096",
    "34096",
    "34096",
    "34096",
    "34096",
    "34096",
    "34096",
    "34096",
    "34096",
    "34096",
    "34096",
    "34096",
    "34096",
    "33584",
    "33584",
    "33328",
    "33328",
    "33328",
    "33328",
    "33328",
    "33328",
    "33328",
    "33328",
    "33328",
    "33328",
    "33328",
    "33328",
    "33328",
    "33328",
    "33328",
    "33328",
    "33328",
    "op_step2,2,1,10",
    "33280",
    "33280",
    "33280",
    "33204",
    "33204",
    "33204",
    "33204",
    "33284",
    "33284",
    "33284",
    "33204",
    "33204",
    "33204",
    "33204",
    "33204",
    "33204",
    "33204",
    "33204",
    "33204",
    "33204",
    "33204",
    "33204",
    "33204",
    "33204",
    "33204",
    "33204",
    "32688",
    "32648",
    "32648",
    "32648",
    "32648",
    "32648",
    "32648",
    "32648",
    "32648",
    "32648",
    "32616",
    "32616",
    "32616",
    "32616",
    "32616",
    "32616",
    "32616",
    "32616",
    "32616",
    "32616",
    "32616",
    "32616",
    "32616",
    "32616",
    "32616",
    "32616",
    "32616",
    "32616",
    "32616",
    "32616",
    "32616",
    "32616",
    "32616",
    "32616",
    "32616",
    "32616",
    "32616",
    "32616",
    "32616",
    "32616",
    "op_step1,2,2,10",
    "34044",
    "34048",
    "34052",
    "33880",
    "33880",
    "33880",
    "33824",
    "33824",
    "33824",
    "33824",
    "33824",
    "33824",
    "33824",
    "33824",
    "33824",
    "33824",
    "33824",
    "33192",
    "33192",
    "33192",
    "33192",
    "33192",
    "33192",
    "33192",
    "33192",
    "33192",
    "33192",
    "33192",
    "33192",
    "33192",
    "33192",
    "33192",
    "33192",
    "33192",
    "33192",
    "33192",
    "33192",
    "33192",
    "33192",
    "33192",
    "33192",
    "33192",
    "33192",
    "33192",
    "33192",
    "33192",
    "33192",
    "33192",
    "33192",
    "33192",
    "33192",
    "33192",
    "33192",
    "33192",
    "33192",
    "33192",
    "32216",
    "32216",
    "32216",
    "32216",
    "32216",
    "32216",
    "32216",
    "32216",
    "32216",
    "op_step2,2,2,10",
    "32672",
    "32672",
    "32672",
    "32472",
    "32472",
    "32472",
    "32472",
    "32352",
    "32352",
    "32352",
    "32296",
    "32296",
    "32296",
    "32368",
    "32368",
    "32368",
    "32368",
    "32120",
    "32056",
    "32012",
    "32012",
    "32012",
    "32012",
    "32012",
    "32012",
    "32012",
    "32012",
    "32012",
    "32012",
    "32012",
    "32012",
    "32012",
    "32012",
    "32012",
    "32012",
    "32012",
    "32012",
    "32012",
    "32012",
    "32012",
    "32012",
    "32012",
    "32012",
    "32012",
    "32012",
    "32012",
    "32012",
    "32012",
    "32012",
    "32012",
    "32012",
    "32012",
    "32012",
    "32012",
    "32012",
    "32012",
    "32012",
    "32012",
    "32012",
    "32012",
    "32012",
    "32012",
    "32012",
    "32012",
    "32012",
    "32012",
    "op_step1,2,3,10",
    "34012",
    "34012",
    "34012",
    "34012",
    "34012",
    "33752",
    "33700",
    "33700",
    "33700",
    "33700",
    "33700",
    "33700",
    "33700",
    "33700",
    "33700",
    "33700",
    "33700",
    "33700",
    "33700",
    "33700",
    "33700",
    "33700",
    "33700",
    "33700",
    "33700",
    "33700",
    "33864",
    "33864",
    "33864",
    "33864",
    "33864",
    "33864",
    "33864",
    "33864",
    "33868",
    "33868",
    "33868",
    "33868",
    "33868",
    "33868",
    "33868",
    "33868",
    "33868",
    "33868",
    "33868",
    "33868",
    "33868",
    "33868",
    "33868",
    "33868",
    "33828",
    "33828",
    "33828",
    "33828",
    "33828",
    "33828",
    "33828",
    "33828",
    "33828",
    "33828",
    "33828",
    "33828",
    "33828",
    "33828",
    "33828",
    "op_step2,2,3,10",
    "33912",
    "32896",
    "32896",
    "32896",
    "32824",
    "32824",
    "32824",
    "32776",
    "32776",
    "32776",
    "32696",
    "32696",
    "32696",
    "32696",
    "32696",
    "32696",
    "32696",
    "32696",
    "32696",
    "32696",
    "32696",
    "32696",
    "32696",
    "32696",
    "32696",
    "32696",
    "32696",
    "32696",
    "32696",
    "32696",
    "32696",
    "32696",
    "32696",
    "32696",
    "32696",
    "32696",
    "32696",
    "32696",
    "32696",
    "32696",
    "32696",
    "32696",
    "32696",
    "32696",
    "32696",
    "32696",
    "32696",
    "32696",
    "32696",
    "32696",
    "32696",
    "32696",
    "32696",
    "32696",
    "32696",
    "32696",
    "32696",
    "32696",
    "32696",
    "32696",
    "32696",
    "32696",
    "32696",
    "32696",
    "32696",
    "32696",
    "op_step1,2,4,10",
    "34244",
    "34244",
    "34244",
    "34244",
    "33904",
    "33904",
    "33904",
    "33852",
    "33852",
    "33852",
    "33852",
    "33852",
    "33852",
    "33852",
    "33852",
    "33852",
    "33852",
    "33852",
    "33852",
    "33852",
    "33852",
    "33852",
    "33852",
    "33852",
    "33852",
    "33852",
    "33852",
    "33852",
    "33852",
    "33852",
    "33852",
    "33852",
    "33852",
    "33852",
    "33852",
    "33852",
    "33852",
    "33852",
    "33852",
    "33852",
    "33852",
    "33852",
    "33852",
    "33852",
    "33852",
    "33852",
    "33852",
    "33852",
    "33852",
    "33852",
    "33852",
    "33852",
    "33852",
    "33852",
    "33852",
    "33852",
    "33852",
    "33852",
    "33852",
    "33852",
    "33852",
    "33852",
    "33852",
    "33852",
    "33852",
    "33852",
    "op_step2,2,4,10",
    "32832",
    "32832",
    "32832",
    "32716",
    "32716",
    "32716",
    "32584",
    "32584",
    "32584",
    "32584",
    "32584",
    "32584",
    "32584",
    "32584",
    "32584",
    "32584",
    "32584",
    "32584",
    "32584",
    "32584",
    "32584",
    "32584",
    "32584",
    "32584",
    "32584",
    "32584",
    "32584",
    "32584",
    "32584",
    "32584",
    "32584",
    "32584",
    "32584",
    "32584",
    "32584",
    "32584",
    "32584",
    "32584",
    "32584",
    "32584",
    "32584",
    "32584",
    "32584",
    "32584",
    "32584",
    "32584",
    "32584",
    "32584",
    "32584",
    "32524",
    "32524",
    "32524",
    "32524",
    "32524",
    "32524",
    "32524",
    "32524",
    "32524",
    "32524",
    "32524",
    "32524",
    "32524",
    "32524",
    "32524",
    "32524",
    "op_step1,2,5,10",
    "34172",
    "34916",
    "34916",
    "34916",
    "34916",
    "34268",
    "34268",
    "34216",
    "34216",
    "34216",
    "34216",
    "34216",
    "34216",
    "34216",
    "34216",
    "34216",
    "34216",
    "34216",
    "34216",
    "34216",
    "34216",
    "34216",
    "34216",
    "34216",
    "34216",
    "34216",
    "34216",
    "34216",
    "34216",
    "34216",
    "34216",
    "34216",
    "34216",
    "34216",
    "34216",
    "34216",
    "34216",
    "34216",
    "34216",
    "34216",
    "34216",
    "34216",
    "34216",
    "34216",
    "34216",
    "34216",
    "34216",
    "34216",
    "34216",
    "34216",
    "34216",
    "34216",
    "34216",
    "34216",
    "34216",
    "34216",
    "34216",
    "34216",
    "34216",
    "34216",
    "34216",
    "34216",
    "34216",
    "34216",
    "34216",
    "34216",
    "op_step2,2,5,10",
    "33028",
    "33028",
    "33028",
    "32972",
    "32972",
    "32972",
    "32932",
    "32932",
    "32932",
    "32932",
    "32852",
    "32852",
    "32852",
    "32852",
    "32852",
    "32852",
    "32852",
    "32852",
    "32852",
    "32852",
    "32852",
    "32852",
    "32852",
    "32796",
    "32796",
    "32796",
    "32796",
    "32796",
    "32796",
    "32796",
    "32796",
    "32796",
    "32796",
    "32796",
    "32796",
    "32796",
    "32796",
    "32796",
    "32796",
    "32796",
    "32796",
    "32796",
    "32796",
    "32796",
    "32796",
    "32796",
    "32796",
    "32796",
    "32796",
    "32796",
    "32796",
    "32796",
    "32796",
    "32796",
    "32796",
    "32796",
    "32796",
    "32796",
    "32796",
    "32796",
    "32796",
    "32796",
    "32796",
    "32796",
    "32796",
    "op_step1,2,6,10",
    "33180",
    "34696",
    "34696",
    "34696",
    "34396",
    "34396",
    "34396",
    "34440",
    "34440",
    "34440",
    "34352",
    "34352",
    "34352",
    "34352",
    "34444",
    "34444",
    "34444",
    "34356",
    "34356",
    "34356",
    "34356",
    "34356",
    "34356",
    "34356",
    "34356",
    "34356",
    "34356",
    "34436",
    "34436",
    "34436",
    "34356",
    "34356",
    "34356",
    "32600",
    "32600",
    "32600",
    "32600",
    "32600",
    "32600",
    "32600",
    "32600",
    "32612",
    "32612",
    "32612",
    "32612",
    "32612",
    "32616",
    "32616",
    "32616",
    "32616",
    "32616",
    "32616",
    "32616",
    "32616",
    "32616",
    "32616",
    "32616",
    "32616",
    "32616",
    "32616",
    "32616",
    "32616",
    "32616",
    "32616",
    "32616",
    "32616",
    "op_step2,2,6,10",
    "31516",
    "31516",
    "31516",
    "31516",
    "31516",
    "31516",
    "31516",
    "31388",
    "31388",
    "31388",
    "31388",
    "31388",
    "31388",
    "30984",
    "30984",
    "30984",
    "30984",
    "30984",
    "30984",
    "30984",
    "30984",
    "30984",
    "30984",
    "30984",
    "30984",
    "30984",
    "30984",
    "30984",
    "30984",
    "30984",
    "30984",
    "30984",
    "30984",
    "30984",
    "30984",
    "30984",
    "30984",
    "30984",
    "30984",
    "30984",
    "30984",
    "30984",
    "30984",
    "30984",
    "30984",
    "30984",
    "30984",
    "30984",
    "30984",
    "30984",
    "30984",
    "30984",
    "30984",
    "30984",
    "30984",
    "30984",
    "30984",
    "30984",
    "30984",
    "30984",
    "30984",
    "30984",
    "30984",
    "30984",
    "30984",
    "30984",
    "op_step1,2,7,10",
    "33036",
    "33136",
    "33144",
    "33144",
    "33144",
    "32836",
    "32784",
    "32784",
    "32784",
    "32784",
    "32784",
    "32784",
    "32784",
    "32784",
    "32784",
    "32784",
    "32784",
    "32784",
    "32784",
    "32784",
    "32784",
    "32784",
    "32784",
    "32784",
    "32784",
    "32784",
    "32784",
    "32784",
    "32784",
    "32784",
    "32784",
    "32784",
    "32784",
    "32784",
    "32784",
    "32784",
    "32784",
    "32784",
    "32788",
    "32788",
    "32788",
    "32800",
    "32800",
    "32800",
    "32800",
    "32800",
    "32800",
    "32800",
    "32800",
    "32800",
    "32800",
    "32804",
    "32804",
    "32804",
    "32804",
    "32804",
    "32804",
    "32804",
    "32804",
    "32804",
    "32804",
    "32804",
    "32804",
    "32804",
    "32804",
    "op_step2,2,7,10",
    "31588",
    "31588",
    "31588",
    "31588",
    "31588",
    "31588",
    "31592",
    "31744",
    "31744",
    "31748",
    "31596",
    "31596",
    "31596",
    "31596",
    "31596",
    "31596",
    "31596",
    "31596",
    "31596",
    "31600",
    "31600",
    "31600",
    "31600",
    "31600",
    "31600",
    "31600",
    "31600",
    "31600",
    "31600",
    "31600",
    "31600",
    "31600",
    "31604",
    "31604",
    "31604",
    "31604",
    "31604",
    "31604",
    "31604",
    "31604",
    "31604",
    "31604",
    "31604",
    "31604",
    "31604",
    "31604",
    "31604",
    "31604",
    "31612",
    "31612",
    "31612",
    "31612",
    "31612",
    "31612",
    "31612",
    "31612",
    "31612",
    "31612",
    "31612",
    "31612",
    "31612",
    "31612",
    "31612",
    "31612",
    "31612",
    "31612",
    "op_step1,2,8,10",
    "33392",
    "33392",
    "33396",
    "33396",
    "33396",
    "33056",
    "33004",
    "33004",
    "33004",
    "33008",
    "33008",
    "33008",
    "33008",
    "33008",
    "33008",
    "33008",
    "33008",
    "33008",
    "33012",
    "33012",
    "33012",
    "33012",
    "33012",
    "33012",
    "33012",
    "33012",
    "33012",
    "33012",
    "33012",
    "33012",
    "33012",
    "33012",
    "33012",
    "33012",
    "33012",
    "33012",
    "33012",
    "33012",
    "33012",
    "33012",
    "33012",
    "33012",
    "33012",
    "33012",
    "33012",
    "33012",
    "33012",
    "33012",
    "33012",
    "33012",
    "33012",
    "33012",
    "33012",
    "33012",
    "33012",
    "33012",
    "33012",
    "33012",
    "33012",
    "32984",
    "32984",
    "32984",
    "32984",
    "32984",
    "32984",
    "op_step2,2,8,10",
    "31904",
    "31904",
    "31908",
    "31908",
    "31844",
    "31844",
    "31852",
    "31848",
    "31848",
    "31848",
    "31848",
    "31848",
    "31852",
    "31852",
    "31852",
    "31852",
    "31852",
    "31852",
    "31852",
    "31852",
    "31852",
    "31852",
    "31852",
    "31852",
    "31852",
    "31856",
    "31856",
    "31856",
    "31856",
    "31856",
    "31856",
    "31856",
    "31856",
    "31856",
    "31856",
    "31856",
    "31856",
    "31856",
    "31856",
    "31856",
    "31856",
    "31856",
    "31856",
    "31856",
    "31856",
    "31856",
    "31856",
    "31856",
    "31856",
    "31856",
    "31856",
    "31856",
    "31856",
    "31856",
    "31856",
    "31856",
    "31856",
    "31856",
    "31856",
    "31856",
    "31856",
    "31856",
    "31856",
    "31856",
    "31856",
    "31856",
    "op_step1,2,9,10",
    "33116",
    "33116",
    "33116",
    "32972",
    "32972",
    "32972",
    "32920",
    "32920",
    "32920",
    "32920",
    "32920",
    "32920",
    "32920",
    "32920",
    "32920",
    "32920",
    "32920",
    "32920",
    "32920",
    "32920",
    "32920",
    "32920",
    "32920",
    "32920",
    "32920",
    "32920",
    "32920",
    "32920",
    "32920",
    "32920",
    "32920",
    "32920",
    "32920",
    "32920",
    "32920",
    "32920",
    "32920",
    "32920",
    "32920",
    "32920",
    "32920",
    "32920",
    "32920",
    "32920",
    "32920",
    "32892",
    "32892",
    "32892",
    "32892",
    "32892",
    "32892",
    "32892",
    "32892",
    "32892",
    "32892",
    "32892",
    "32892",
    "32892",
    "32892",
    "32892",
    "32892",
    "32892",
    "32892",
    "32892",
    "32892",
    "op_step2,2,9,10",
    "32988",
    "32100",
    "32100",
    "32100",
    "32048",
    "32048",
    "32048",
    "31948",
    "31948",
    "31948",
    "31948",
    "31948",
    "31948",
    "31948",
    "31948",
    "31948",
    "31948",
    "31948",
    "31948",
    "31948",
    "31948",
    "31948",
    "31948",
    "31948",
    "31948",
    "31948",
    "31948",
    "31948",
    "31948",
    "31948",
    "31948",
    "31948",
    "31948",
    "31948",
    "31948",
    "31948",
    "31948",
    "31948",
    "31948",
    "31948",
    "31948",
    "31948",
    "31948",
    "31948",
    "31948",
    "31948",
    "31948",
    "31948",
    "31948",
    "31948",
    "31948",
    "31948",
    "31948",
    "31948",
    "31948",
    "31948",
    "31948",
    "31948",
    "31948",
    "31948",
    "31948",
    "31948",
    "31948",
    "31948",
    "31948",
    "31948",
    "op_step1,2,10,10",
    "33728",
    "33732",
    "33752",
    "33752",
    "33752",
    "33752",
    "33368",
    "33316",
    "33316",
    "33316",
    "33316",
    "33316",
    "33316",
    "33320",
    "33320",
    "33320",
    "33320",
    "33320",
    "33348",
    "33348",
    "33348",
    "33328",
    "33328",
    "33328",
    "33328",
    "33328",
    "33328",
    "33328",
    "33328",
    "33328",
    "33328",
    "33328",
    "33328",
    "33328",
    "33328",
    "33328",
    "33328",
    "33328",
    "33328",
    "33328",
    "33328",
    "33328",
    "33328",
    "33328",
    "33328",
    "33328",
    "33328",
    "33328",
    "33328",
    "33328",
    "33328",
    "33328",
    "33328",
    "32468",
    "32468",
    "32468",
    "32468",
    "32468",
    "32468",
    "32468",
    "32468",
    "32468",
    "32468",
    "32468",
    "32468",
    "32468",
    "op_step2,2,10,10",
    "32796",
    "32796",
    "32796",
    "32504",
    "32504",
    "32504",
    "32604",
    "32604",
    "32604",
    "32604",
    "32508",
    "32508",
    "32508",
    "32508",
    "32252",
    "32252",
    "32252",
    "32252",
    "32252",
    "32252",
    "32252",
    "32252",
    "32252",
    "32252",
    "32252",
    "32252",
    "32252",
    "32252",
    "32252",
    "32252",
    "32252",
    "32252",
    "32252",
    "32252",
    "32252",
    "32252",
    "32252",
    "32252",
    "32252",
    "32252",
    "32252",
    "32252",
    "32252",
    "32252",
    "32252",
    "32252",
    "32252",
    "32252",
    "32252",
    "32252",
    "32252",
    "32252",
    "32252",
    "32252",
    "32252",
    "32252",
    "32252",
    "32252",
    "32252",
    "32252",
    "32252",
    "32252",
    "32252",
    "32252",
    "32252",
    "op_end",
    "32252",
    "32252",
    "31760",
    "31760",
    "31760",
    "31760",
    "31760",
    "30264",
    "disconnected"
  ];
		handler.emit('exit',0,samplingData)
		return;
	}
	var memSamplingProcess;
	var undef;
	var bin = ROOT_PATH + '\\bin\\QQHelpDemo.exe';
	var samplingData=[];

	function killMemSampling(){
		if(memSamplingProcess) {
			memSamplingProcess.kill();
			memSamplingProcess = null;
		}
	}

	function killResourceOwner() {
		childProcess.spawn(bin, ['kill'], {
			cwd:undef,
			env:process.env
		});
	}

	// kill existing resource owner
	killResourceOwner();

	// waiting win8QQ connect
	SERVER_EVENT.on('resouceOwnerConnected', function (resourceOwner) {
		samplingData.push('connected');
		// waiting testmanager loaded
		setTimeout(function () {
			// performance analysis start
			pushMessage(resourceOwner,{
				type: 0x30003
			});
		},2000);
	});

	SERVER_EVENT.on('resouceOwnerDisconnected', function () {
		samplingData.push('disconnected');
		killMemSampling();
		handler.emit('exit',0,samplingData);
	});

	SERVER_EVENT.on('resouceOwnerPaStart', function () {
		samplingData.push('op_start');
	});

	SERVER_EVENT.on('resourceOwnerPaStep', function (stepStatus) {
		samplingData.push('op_step'+stepStatus);
	});

	SERVER_EVENT.on('resouceOwnerPaStop', function () {
		samplingData.push('op_end');

		// stop
		setTimeout(function () {
			// kill win8QQ
			killResourceOwner();
			// stop monitor cpu usage, emit exit first
			setTimeout(killMemSampling,500);
		}, 2000);
	});

	memSamplingProcess = childProcess.spawn(bin, ['memorysize'], {
		cwd: undef,
		env:process.env
	});

	memSamplingProcess.stdout.on('data', function (data) {
		var usage = data.toString('utf-8').replace(/[\r\n]/g,'');
		if (usage) {
			samplingData.push(usage);
		}
	});

};

exports.handler=handler;
